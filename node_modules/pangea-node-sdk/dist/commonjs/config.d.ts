import { ConfigOptions, ConfigEnv } from "./types.js";
export declare const version = "4.4.0";
/** Configuration for a Pangea service client. */
declare class PangeaConfig {
    /** Pangea API domain. */
    domain: string;
    /**
     * Pangea environment.
     *
     * If set to `ConfigEnv.LOCAL`, then `domain` must be the full host (i.e.,
     * hostname and port) for the Pangea service that this `PangeaConfig` will be
     * used for.
     */
    environment: ConfigEnv;
    /** Config ID for multi-config projects. */
    configID?: string;
    /**
     * Whether or not to perform requests via plain HTTP, as opposed to secure
     * HTTPS.
     */
    insecure: boolean;
    /** How many times a request should be retried on failure. */
    requestRetries: number;
    /** Maximum allowed time (in milliseconds) for a request to complete. */
    requestTimeout: number;
    /** Whether or not queued request retries are enabled. */
    queuedRetryEnabled: boolean;
    /** How many queued request retries there should be on failure. */
    queuedRetries: number;
    /** Timeout for polling results after a HTTP/202 (in milliseconds). */
    pollResultTimeoutMs: number;
    /** User-Agent string to append to the default one. */
    customUserAgent: string | undefined;
    /**
     * Create a new `PangeaConfig`.
     *
     * @param options Configuration options.
     */
    constructor(options?: ConfigOptions);
}
export default PangeaConfig;

"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateRsaKeyPair = generateRsaKeyPair;
exports.asymmetricDecrypt = asymmetricDecrypt;
const node_crypto_1 = __importDefault(require("node:crypto"));
const node_util_1 = require("node:util");
const generateKeyPair = (0, node_util_1.promisify)(node_crypto_1.default.generateKeyPair);
/**
 * Generates a new RSA key pair of the given key size.
 * @param keySize Key size.
 * @returns RSA key pair.
 */
function generateRsaKeyPair(keySize = 4096) {
    return generateKeyPair("rsa", {
        modulusLength: keySize,
        publicKeyEncoding: {
            type: "spki",
            format: "pem",
        },
        privateKeyEncoding: {
            type: "pkcs8",
            format: "pem",
        },
    });
}
/**
 * Decrypt cipher text using the given asymmetric private key.
 * @param privateKey Asymmetric private key.
 * @param cipherText Cipher text.
 * @param oaepHash Hash function to use for OAEP padding and MGF1.
 * @param padding Padding value.
 * @returns Decrypted text.
 */
function asymmetricDecrypt(privateKey, cipherText, oaepHash = "sha512", padding = node_crypto_1.default.constants.RSA_PKCS1_OAEP_PADDING) {
    return node_crypto_1.default
        .privateDecrypt({
        key: privateKey,
        oaepHash,
        padding,
    }, cipherText)
        .toString("utf8");
}
